<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="robots" content="noindex">
    <meta name="googlebot" content="noindex">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" rel="stylesheet" />
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({
                'gtm.start': new Date().getTime(),
                event: 'gtm.js'
            });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = l != 'dataLayer' ?
                '&l=' + l :
                '';
            j.async = true;
            j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
            f
                .parentNode
                .insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-KT6H7LH');
    </script>
    <!-- End Google Tag Manager -->
    <title>Rapport de la campagne "<%= reporting["a-Ensemble"].campaignName %>" - Antenne Solutions Business</title>

    <link rel="icon" type="image/png"
        href="https://antennesb.fr/wp-content/uploads/2020/02/cropped-Logo-AntenneSolutionsBusiness-coul01-2-32x32.png"
        sizes="32x32" />
    <link rel="icon" type="image/png"
        href="https://antennesb.fr/wp-content/uploads/2020/02/cropped-Logo-AntenneSolutionsBusiness-coul01-2-192x192.png"
        sizes="192x192" />
    <link rel="apple-touch-icon" type="image/png"
        href="https://antennesb.fr/wp-content/uploads/2020/02/cropped-Logo-AntenneSolutionsBusiness-coul01-2-180x180.png" />

    <style>
        body {
            background: #eee;
            font-family: Century Gothic, Verdana, Geneva, Tahoma, sans-serif;
        }

        #reporting-board {
            background: #fff;
        }

        hr {
            margin-top: 10px;
            border-color: #ddd;
        }

        .list-group-flush {
            width: 100%;
        }

        .list-group-flush li strong {
            /* width: 100%; */
            display: inline-block;
        }

        img {
            image-rendering: -webkit-optimize-contrast;
        }
    </style>

</head>

<body>
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KT6H7LH" height="0" width="0"
            style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->

    <div class="container p-3 mt-2 mb-2 shadow-lg rounded" id="reporting-board">

        <div class="row" style="
            justify-content: center;
        ">
            <div class="col-md-3">
                <a href="https://antennesb.fr/"target="_blank"><img src="/admin/photos/logo.png" alt="logo_antenne" /></a>

            </div>
            <div class="col-md-3">
                <a href="https://www.antennereunion.fr/"target="_blank"><img
                        src="https://www.antennereunion.fr/squelettes/assets/img/logo-ar2.png" alt="logo_antenne" /></a>

            </div>

        </div>

        <div class="row">


            <div class="col-md-12" style="padding-top: 30px;">
                <h2 class="top-50 start-50 text-center">Rapport de la campagne :
                    <%= reporting["a-Ensemble"].campaignName %></h2>
            </div>
        </div>


        <div class="row mt-5">
            <div class="container">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <strong>Annonceur</strong>
                        :
                        <%= reporting["a-Ensemble"].campaignAdvertiser %></li>
                    <li class="list-group-item">
                        <strong>Campagne</strong>
                        :
                        <%= reporting["a-Ensemble"].campaignName %></li>
                    <li class="list-group-item">
                        <strong>Période de diffusion</strong>
                        :
                        <%= reporting["a-Ensemble"].campaignPeriod %></li>
                    <li class="list-group-item">
                        <strong>Budget</strong>
                        :
                        <%= reporting["a-Ensemble"].campaignBudget %></li>
                </ul>
            </div>
        </div>

        <div class="row p-3 mt-5 ml-2 mr-2 bg-info text-white bg-opacity-75 rounded" id="info_generale">
            <h3 class="title">
                <strong>Résumé</strong>
            </h3>
            <div class="container">
                <ul class="list-group list-group-flush list-unstyled">
                    <li>Couverture : <% if(reporting["a-Ensemble"].campaignChannel.Couverture) { %>
                        <strong><%= reporting["a-Ensemble"].campaignChannel.Couverture %> %</strong> <% } %> des
                        Réunionnais de <% if(reporting["a-Ensemble"]) { %> <strong>Ensemble</strong> <% } %> à la
                        campagne​</li>
                    <li>La campagne a généré <% if(reporting["a-Ensemble"].campaignChannel['Nombre de contacts']) { %>
                        <strong><%= utilities.numStr(Math.round(reporting["a-Ensemble"].campaignChannel['Nombre de contacts'])) %></strong>
                        <% } %> contacts de <% if(reporting["a-Ensemble"]) { %> <strong>la cible Ensemble</strong>
                        <% } %>​</li>
                    <li>Nombre de GRP <% if(reporting["a-Ensemble"]) { %> <strong>Ensemble</strong> <% } %>​ :
                        <% if(reporting["a-Ensemble"].campaignChannel['GRP']) { %>
                        <strong><%= reporting["a-Ensemble"].campaignChannel['GRP'] %></strong> <% } %> GRP​</li>
                    <li>Coût du GRP moyen : <% if(reporting["a-Ensemble"].campaignChannel['Ct GRP']) { %>
                        <strong><%= reporting["a-Ensemble"].campaignChannel['Ct GRP'] %></strong> <% } %> €​</li>
                    <li>Coût pour 1000 contacts :
                        <% if(reporting["a-Ensemble"].campaignChannel['CPM contacts Net']) { %>
                        <strong><%= reporting["a-Ensemble"].campaignChannel['CPM contacts Net'] %></strong> <% } %> €​
                    </li>
                </ul>
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-8 pt-3" id="table_montee_en_couverture">
                <h3 class="title">
                    <strong>Montée en couverture et répétition</strong>
                </h3>
                <div class="container">
                    <div id="chart-table_montee_en_couverture"></div>
                </div>
            </div>

            <div class="col-4 pt-3" id="table_couverture_par_cible">
                <h3 class="title">
                    <strong>Couverture par cible</strong>
                </h3>
                <div class="container">
                    <div id="chart-table_couverture_par_cible"></div>
                </div>
            </div>
        </div>

        <div class="row p-3 mt-5 ml-2 mr-2" id="table_ventilations_GRP_horaires">
            <h3 class="title">
                <strong>Ventilations des GRP par tranche horaires​</strong>
            </h3>
            <div class="container">
                <div id="chart-table_ventilations_GRP_horaires"></div>
            </div>
        </div>

        <div class="row p-3 mt-5 ml-2 mr-2" id="table_ventilations_GRP_jours">
            <h3 class="title">
                <strong>Ventilations des GRP par jours nommés​​</strong>
            </h3>
            <div class="container">
                <div id="chart-table_ventilations_GRP_jours"></div>
            </div>
        </div>
        <div class="pt-5 pb-5 text-right"> <a href="/t/export" class="btn btn-xs btn-success"> <i class="fas fa-file-excel"> </i> Télécharger le rapport <span class="small">(Format : Excel)</span></a> </div>

    </div>

    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous">
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous">
    </script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous">
    </script>

    <script src="/assets/js/plugins/apexcharts.min.js"></script>
    <script>
        'use strict';
        $(document).ready(function () {
          var config = {
            baseurl: "http://127.0.0.1:3001/"
          };
      
      
          var chartCampaignUrl = config.baseurl + 't/charts/<%=campaign_crypt%>';
      
          $.getJSON(chartCampaignUrl, function (response) {
      
            // Montée en couverture et répétition
            var campaignIncreaseInLoadPerDayOptions = {
              series: [{
                name: response.campaignIncreaseInLoadPerDayCouverture.name,
                type: 'column',
                data: response.campaignIncreaseInLoadPerDayCouverture.data
              }, {
                name: response.campaignIncreaseInLoadPerDayRepetition.name,
                type: 'line',
                data: response.campaignIncreaseInLoadPerDayRepetition.data
              }],
              chart: {
                height: 350,
                type: 'line',
                stacked: false
              },
              dataLabels: {
                enabled: false
              },
              stroke: {
                width: [1, 3]
              },
              /*  title: {
                  text: 'Montée en couverture et répétition',
                  enabled: false,
                  align: 'center',
                },*/
              xaxis: {
                categories: response.campaignIncreaseInLoadPerDayJour.data,
              },
              yaxis: [{
                  axisTicks: {
                    show: true,
                  },
                  axisBorder: {
                    show: true,
                    color: '#008FFB'
                  },
                  labels: {
                    style: {
                      colors: '#008FFB',
                    }
                  },
                  title: {
                    text: response.campaignIncreaseInLoadPerDayCouverture.name,
                    style: {
                      color: '#008FFB',
                    }
                  },
                  tooltip: {
                    enabled: true
                  }
                },
                {
                  seriesName: response.campaignIncreaseInLoadPerDayRepetition.name,
                  opposite: true,
                  axisTicks: {
                    show: true,
                  },
                  axisBorder: {
                    show: true,
                    color: '#00E396'
                  },
                  labels: {
                    style: {
                      colors: '#00E396',
                    }
                  },
                  title: {
                    text: response.campaignIncreaseInLoadPerDayRepetition.name,
                    style: {
                      color: '#00E396',
                      border: '2px'
                    }
                  },
                }
              ],
              tooltip: {
                fixed: {
                  enabled: true,
                  position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft
                  offsetY: 30,
                  offsetX: 60
                },
              },
              legend: {
                horizontalAlign: 'left',
                offsetX: 40
              }
            };
      
            var campaignIncreaseInLoadPerDayChart = new ApexCharts(document.querySelector(
              "#chart-table_montee_en_couverture"), campaignIncreaseInLoadPerDayOptions);
            campaignIncreaseInLoadPerDayChart.render();
            console.log(response.cibleEnsemble)
            // Couverture par cible
            var options = {
              series: [response.cibleEnsemble.data],
              chart: {
                width: 380,
                type: 'radialBar',
              },
              labels: [response.cibleEnsemble.name],
              responsive: [{
                breakpoint: 480,
                options: {
                  chart: {
                    width: 100
                  },
                  legend: {
                    position: 'bottom'
                  }
                }
              }]
            };
      
            var chart = new ApexCharts(document.querySelector("#chart-table_couverture_par_cible"), options);
            chart.render();
      
            console.log(response.campaigntimeSlotDiaryGRP)
            // Ventilations des GRP par tranches horaires​
            var campaigntimeSlotDiaryOptions = {
              series: [{
                name: response.campaigntimeSlotDiaryGRP.name,
                data: response.campaigntimeSlotDiaryGRP.data
              }],
              chart: {
                type: 'bar',
                height: 300
              },
              plotOptions: {
                bar: {
                  horizontal: false
                },
              },
              dataLabels: {
                enabled: false
              },
              stroke: {
                show: true,
                width: 0,
                colors: ['transparent']
              },
              xaxis: {
                title: {
                  text: response.campaigntimeSlotDiaryTrancheHoraires.name
                },
                categories: response.campaigntimeSlotDiaryTrancheHoraires.data
              },
              yaxis: {
                title: {
                  text: response.campaigntimeSlotDiaryGRP.name
                },
                type: 'numeric'
              },
              fill: {
                opacity: 1
              },
              tooltip: {
                y: {
                  formatter: function (val) {
                    return val
                  }
                }
              }
            };
      
            var campaigntimeSlotDiaryChart = new ApexCharts(document.querySelector(
              "#chart-table_ventilations_GRP_horaires"), campaigntimeSlotDiaryOptions);
            campaigntimeSlotDiaryChart.render();
      
            console.log(response.campaignNameDayCouverture)
            // Jours nommés
            // Ventilations des GRP par tranches horaires​
            var campaignNameDayOptions = {
              series: [{
                name: response.campaignNameDayCouverture.name,
                data: response.campaignNameDayCouverture.data
              }],
              chart: {
                type: 'bar',
                height: 300
              },
              plotOptions: {
                bar: {
                  horizontal: false
                },
              },
              dataLabels: {
                enabled: true
              },
              stroke: {
                show: true,
                width: 0,
                colors: ['transparent']
              },
              xaxis: {
                title: {
                  text: response.campaignNameDayJour.name
                },
                categories: response.campaignNameDayJour.data
              },
              yaxis: {
                title: {
                  text: response.campaigntimeSlotDiaryGRP.name
                },
                type: 'numeric'
              },
              fill: {
                opacity: 1
              },
              tooltip: {
                y: {
                  formatter: function (val) {
                    return val
                  }
                }
              }
            };
  
      
      
      
            var campaignNameDayChart = new ApexCharts(document.querySelector("#chart-table_ventilations_GRP_jours"),
              campaignNameDayOptions);
            campaignNameDayChart.render();
          });
      
     
        });
      
      
      </script>
</body>

</html>